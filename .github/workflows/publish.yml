name: Publish Package to npmjs
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          # Defaults to the user or organization that owns the workflow file
          scope: '@scaled-df'
      - run: npm i

      - name: Setup Vals
        run: |
          git config --global user.email "ravinw@conceptvines.com"
          git config --global user.name "ravinw-cv"
      # change npm version based on the PR label; major, minor, patch
      - name: Change Version with commit message
        uses:
          actions/github-script@v5
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          # commit message for the version change; if message starts with "major", "minor", or "patch", the version will be bumped accordingly
          script: |
            const commitMessage = context.payload.commits[0].message
            core.info(`Commit message: ${commitMessage}`)
            if (commitMessage.startsWith('major')) {
              core.info('Bumping major version')
              await exec.exec('npm', ['version', 'major'])
              await exec.exec('npm', ['publish'])

            } else if (commitMessage.startsWith('minor')) {
              core.info('Bumping minor version')
              await exec.exec('npm', ['version', 'minor'])
              await exec.exec('npm', ['publish'])

            } else if (commitMessage.startsWith('patch')) {
              core.info('Bumping patch version')
              await exec.exec('npm', ['version', 'patch'])
              await exec.exec('npm', ['publish'])

            } else {
              core.info('No version bump')
            }
            
      - name: git push
        uses:
          actions/github-script@v5
        with: 
          github-token: ${{ secrets.GIT_PAT_TOKEN }}
          script: |
            await exec.exec('git', ['push'])
            
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
